<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <!-- 
 * 행사 조회 Mybatis 매퍼
 * @author 정은지
 * @since 2024.06.17 
 * @version 1.0
 *
 * <pre>
 * 수정일        	수정자        수정내용
 * ==========  =========    =========
 * 2024.06.17  정은지         최초 생성
 * 2024.06.19  정은지         행사 상세 조회 추가
<<<<<<< HEAD
 * 2024.06.20   조영욱        이벤트 필터로 조회 추가
 * 2024.06.21   정은지        별점 작성, 조회수 증가 기능 추가 
=======
 * 2024.06.20  조영욱         이벤트 필터로 조회 추가
 * 2024.06.21  조영욱         이벤트 검색,필터 조회에 페이지네이션 적용, 카테고리/해시태그 검색 추가
>>>>>>> dev
 * </pre>
 -->
 
<mapper namespace="com.devjeans.hype.event.mapper.EventMapper">
<!-- ************* Event resultMap start ************* -->
	<resultMap type="EventTypeVO" id="eventType">
		<result column="event_type_id" property="eventTypeId" />
		<result column="event_type_name" property="eventTypeName" />
	</resultMap>
	
	<resultMap type="CityVO" id="city">
		<result column="city_id" property="cityId" />
		<result column="city_name" property="cityName" />
	</resultMap>
	
	<resultMap type="BranchVO" id="branch">
		<result column="branch_id" property="branchId" />
		<result column="city_id" property="cityId" />
		<result column="branch_name" property="branchName" />
		<result column="address" property="address" />
		<collection property="city" resultMap="city"/>
	</resultMap>
	
	<resultMap type="CategoryVO" id="category">
		<result column="category_id" property="categoryId" />
		<result column="category_name" property="categoryName" />
	</resultMap>
	
	<resultMap type="BannerVO" id="banner">
		<result column="event_id" property="eventId" />
		<result column="order_priority" property="orderPriority" />
		<collection property="event" resultMap="event"/>
	</resultMap>
	
	<resultMap type="EventHashtagVO" id="eventHashtag">
		<result column="event_id" property="eventId" />
		<result column="hashtag_id" property="hashtagId" />
		<collection property="hashtag" resultMap="hashtag" />
	</resultMap>
	
	<resultMap type="HashtagVO" id="hashtag">
		<result column="hashtag_id" property="hashtagId" />
		<result column="hashtag_name" property="hashtagName" />
	</resultMap>
	
	<resultMap type="StarScoreVO" id="starScore">
		<result column="member_id" property="memberId" />
		<result column="event_id" property="eventId" />
		<result column="score" property="score" />
		<result column="create_date" property="createDate" />
	</resultMap>
	
	<resultMap type="EventVO" id="event">
		<id column="event_id" property="eventId" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="image_url" property="imageUrl" />
 		<result column="branch_id" property="branchId" />
 		<result column="category_id" property="categoryId" />
		<result column="event_type_id" property="eventTypeId" /> 
		<result column="start_date" property="startDate" />
		<result column="end_date" property="endDate" />
		<result column="view_count" property="viewCount" />
		<result column="detail_address" property="detailAddress" />
		<collection property="eventType" resultMap="eventType"/>
		<collection property="branch" resultMap="branch"/>
		<collection property="category" resultMap="category"/>
		<collection property="eventHashtagList" resultMap="eventHashtag" />
	</resultMap>
	<!-- ************* Event resultMap end ************* -->
	
	<select id="getDual2" resultType="Object">
		SELECT dummy FROM DUAL
	</select>
	
	<select id="getTopViewEvents" resultMap="event">
		SELECT E.event_id,
		       E.branch_id,
		       E.event_type_id,
		       E.image_url,
		       E.title,
		       E.start_date,
		       E.end_date,
		       B.branch_name,
               C.category_name,
		       ET.event_type_name,
		       E.view_count
		FROM   EVENT E
		       LEFT JOIN BRANCH B
		               ON B.branch_id = E.branch_id
		       LEFT JOIN EVENT_TYPE ET
		               ON ET.event_type_id = E.event_type_id
               LEFT JOIN CATEGORY C
                       ON C.category_id = E.category_id
		WHERE  TO_CHAR(sysdate, 'YYYY-MM-DD') BETWEEN E.start_date AND E.end_date
		ORDER  BY E.view_count DESC
		FETCH FIRST 10 ROWS ONLY
	</select>
	
	<select id="getEventsByDate" resultMap="event" parameterType="java.util.Date">
		SELECT E.event_id,
		       E.branch_id,
		       E.event_type_id,
		       E.image_url,
		       E.title,
		       E.start_date,
		       E.end_date,
		       B.branch_name,
		       C.category_name,
		       ET.event_type_name,
		       E.view_count
		FROM   EVENT E
		       LEFT JOIN BRANCH B
		              ON B.branch_id = E.branch_id
		       LEFT JOIN EVENT_TYPE ET
		              ON ET.event_type_id = E.event_type_id
		       LEFT JOIN CATEGORY C
		              ON C.category_id = E.category_id
		WHERE  #{date} BETWEEN E.start_date AND E.end_date
		FETCH FIRST 6 ROWS ONLY
	</select>
	
	<select id="getBannerEvents" resultMap="banner">
		SELECT E.event_id,
		       E.branch_id,
		       E.event_type_id,
		       E.image_url,
		       E.title,
		       E.start_date,
		       E.end_date,
		       B.branch_name,
               C.category_name,
		       ET.event_type_name,
		       B.order_priority
		FROM   BANNER B
		       INNER JOIN EVENT E
		               ON E.event_id = B.event_id
		       LEFT JOIN BRANCH B
		              ON B.branch_id = E.branch_id
		       LEFT JOIN EVENT_TYPE ET
		              ON ET.event_type_id = E.event_type_id
               LEFT JOIN CATEGORY C
                      ON C.category_id = E.category_id
		ORDER  BY B.order_priority
	</select>
	
	<insert id="insertFavorite">
		INSERT INTO FAVORITE
		            (member_id,
		             event_id)
		VALUES      ( #{memberId},
		              #{eventId}) 
	</insert>
	
	<delete id="deleteFavorite">
		DELETE FROM FAVORITE
		WHERE  member_id = #{memberId}
		       AND event_id = #{eventId} 
	</delete>
	
	<select id="getMyFavoriteEvent">
		SELECT event_id
		FROM FAVORITE
		WHERE member_id = #{memberId}
	</select>
	
	
	<!-- 행사 상세 정보 조회  --> 
	<select id="getEventDetail" resultMap="event">
		SELECT E.event_id,
		       E.branch_id,
		       E.event_type_id,
		       E.image_url,
		       E.title,
		       E.content,
		       E.start_date,
		       E.end_date,
		       ET.event_type_name,
		       E.view_count,
		       CA.category_name,
		       C.city_name,
		       B.branch_name,
		       B.address,
		       E.detail_address
		FROM   EVENT E
		       LEFT JOIN BRANCH B
		              ON B.branch_id = E.branch_id
		       LEFT JOIN CITY C
		              ON C.city_id = B.city_id
		       LEFT JOIN EVENT_TYPE ET
		              ON ET.event_type_id = E.event_type_id
		       LEFT JOIN CATEGORY CA
		              ON CA.category_id = E.category_id
		WHERE  E.event_id = #{eventId}
	</select>
	
	<!-- 행사 별점 조회 -->
	<select id="getEventStarScore">
		SELECT score
		FROM   EVENT E
		       LEFT JOIN STAR_SCORE SS
		              ON SS.event_id = E.event_id
		WHERE  SS.event_id = #{eventId}
	</select>
	
	<!-- 행사 해시태그 리스트 조회 -->
	<select id="getEventHashtagList" resultMap="eventHashtag">
		SELECT H.hashtag_id, H.hashtag_name
		FROM   EVENT E
		       INNER JOIN EVENT_HASHTAG EH
		               ON EH.event_id = E.event_id
		       INNER JOIN HASHTAG H
		               ON H.hashtag_id = EH.hashtag_id
		WHERE  E.event_id = #{eventId} 
	</select> 
	
	<!-- 행사 즐겨찾기 수 조회 -->
	<select id="getEventFavoriteCount">
		SELECT COUNT(*)
		FROM   FAVORITE
		WHERE  event_id = #{eventId}
	</select>
	
	<!-- 행사 즐겨찾기 여부 조회 -->
	<select id="getEventFavoriteStatus">
		SELECT 
		        CASE WHEN count(*) > 0 THEN 1
		        ELSE 0
		        END AS isFavorite
		FROM FAVORITE
		WHERE member_id = #{memberId} AND event_id = #{eventId}
	</select>
	
	<!-- 별점 작성 -->
 	<insert id="insertStarScore">
		INSERT INTO STAR_SCORE
		VALUES      (#{memberId},
		             #{eventId},
		             #{score},
		             sysdate)
	</insert>
	
	<!-- 이벤트 필터로 조회 -->
	<select id="getEventWithFilter" resultMap="event">
		SELECT DISTINCT
			   E.event_id,
		       E.branch_id,
		       E.event_type_id,
		       E.image_url,
		       E.title,
		       E.start_date,
		       E.end_date,
		       B.branch_name,
                   C.category_name,
		           ET.event_type_name,
		           E.view_count
		FROM   EVENT E
		           LEFT JOIN BRANCH B
		               ON B.branch_id = E.branch_id
		           LEFT JOIN EVENT_TYPE ET
		               ON ET.event_type_id = E.event_type_id
                   LEFT JOIN CATEGORY C
                       ON C.category_id = E.category_id
                   LEFT JOIN EVENT_HASHTAG EH
                       ON E.event_id = EH.event_id
                   LEFT JOIN HASHTAG H
                       ON EH.hashtag_id = H.hashtag_id
        
		WHERE 1=1
	    <if test="date!=null">
	        AND #{date} BETWEEN E.start_date AND E.end_date
        </if>
		
	    <if test="keyword!=null">
	        AND (E.title LIKE '%'||#{keyword}||'%'
	        	OR C.category_name LIKE '%'||#{keyword}||'%'
	        	OR H.hashtag_name = #{keyword})
        </if>
        <if test="branchId!=null">
	        AND E.branch_id = #{branchId}
        </if>
        <if test="!eventTypeIdList.isEmpty()">
        	AND E.event_type_id IN
	   	    <foreach item="eventTypeId" collection="eventTypeIdList" open="(" separator="," close=")">
	              #{eventTypeId}
	        </foreach>
        </if>
        ORDER BY E.event_id DESC
        OFFSET (#{page}-1) * #{amount}
        ROWS FETCH FIRST #{amount} ROWS ONLY
	</select>
	
	<select id="selectNextEvent">
		SELECT E.event_id
		FROM EVENT E
		WHERE 1=1
	    <if test="date!=null">
	        AND #{date} BETWEEN E.start_date AND E.end_date
        </if>
		
	    <if test="keyword!=null">
	        AND E.title LIKE '%'||#{keyword}||'%'
        </if>
        <if test="branchId!=null">
	        AND E.branch_id = #{branchId}
        </if>
        <if test="!eventTypeIdList.isEmpty()">
        	AND E.event_type_id IN
	   	    <foreach item="eventTypeId" collection="eventTypeIdList" open="(" separator="," close=")">
	              #{eventTypeId}
	        </foreach>
        </if>
		ORDER BY E.event_id DESC
        OFFSET #{page} * #{amount}
        ROWS FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 별점 카운트 높은 순서대로 조회 -->
	<select id="getTopScoreCountEvents" resultMap="event">
		WITH SCORE_COUNT
		     AS (SELECT E.event_id,
		                COUNT(*) AS count
		         FROM   EVENT E
		                LEFT JOIN STAR_SCORE S
		                       ON S.event_id = E.event_id
		         GROUP  BY E.event_id)
		SELECT E.event_id,
		       E.branch_id,
		       E.event_type_id,
		       E.image_url,
		       E.title,
		       E.start_date,
		       E.end_date,
		       B.branch_name,
		       C.category_name,
		       ET.event_type_name,
		       E.view_count
		FROM   EVENT E
		       LEFT JOIN BRANCH B
		              ON B.branch_id = E.branch_id
		       LEFT JOIN EVENT_TYPE ET
		              ON ET.event_type_id = E.event_type_id
		       LEFT JOIN CATEGORY C
		              ON C.category_id = E.category_id
		       LEFT JOIN SCORE_COUNT S
		              ON S.event_id = E.event_id
		WHERE TO_CHAR(sysdate, 'YYYY-MM-DD') BETWEEN E.start_date AND E.end_date
		ORDER BY S.count DESC
		FETCH FIRST 10 ROWS ONLY
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateViewCount" >
		UPDATE EVENT
		SET view_count = view_count + 1
		WHERE event_id = #{eventId}
	</update>
</mapper>